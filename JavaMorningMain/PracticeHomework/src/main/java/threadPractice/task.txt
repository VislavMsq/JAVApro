1.Вычисление суммы:
  Создайте пул потоков и используйте его для параллельного вычисления суммы элементов в большом массиве.
2.Обработка изображений:
  Создайте пул потоков для обработки различных фильтров на разных частях изображения.
3.Обработка списка задач:
  Создайте пул потоков и используйте его для обработки списка задач. Каждая задача может быть, например,
  обработкой одного элемента списка.
4.Подсчет слов в текстах:
  Разделите коллекцию текстов на несколько частей и используйте пул потоков для параллельного подсчета
  слов в каждом тексте.
5.
**************************************************************************************************************

Ваша задача - разработать систему обработки заказов в ресторане, используя многопоточность и соответствующие механизмы,
такие как ThreadPool, wait, notifyAll и interrupt.

Создайте класс Order, который представляет заказ в ресторане.  -class

У заказа должен быть уникальный идентификатор, состоящий из буквы "O" и номера (например, "O123"). -methode: generate
Заказ также должен иметь статус (новый, готовится, готов) и список блюд.    - enum status

Создайте класс Dish, представляющий отдельное блюдо. - class
String name
long time
double price
У каждого блюда должно быть имя и время приготовления в миллисекундах. -constuc main

Разработайте класс Kitchen, который будет имитировать работу кухни в ресторане. - class
ExecutorService executorService
У кухни есть повара, которые готовят блюда. Используйте ThreadPool для ограничения количества одновременно работающих поваров.

Создайте класс OrderProcessor, который будет получать заказы и передавать их на кухню для приготовления. - class


orderProcessor.cook(dish) -> готовится -> wait
cook {kitchen -> cook... -> notify}

-> готов

methode:
    k
Этот класс также будет имитировать ожидание приготовления блюд и изменение статуса заказа.

Реализуйте механизмы wait и notifyAll для синхронизации работы между классами Kitchen и OrderProcessor.
Когда заказ передается на кухню, он должен перейти в статус "готовится", а потом "готов", как только все блюда будут приготовлены.

Добавьте обработку прерывания потоков в случае,
если заказу требуется время для готовности (например, блюда не готовятся более определенного времени).
